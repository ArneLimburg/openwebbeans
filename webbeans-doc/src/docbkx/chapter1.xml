<?xml version="1.0" encoding="UTF-8"?>
<!--
Licensed to the Apache Software Foundation (ASF) under one
or more contributor license agreements.  See the NOTICE file
distributed with this work for additional information
regarding copyright ownership.  The ASF licenses this file
to you under the Apache License, Version 2.0 (the
"License"); you may not use this file except in compliance
with the License.  You may obtain a copy of the License at

  http://www.apache.org/licenses/LICENSE-2.0

Unless required by applicable law or agreed to in writing,
software distributed under the License is distributed on an
"AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
KIND, either express or implied.  See the License for the
specific language governing permissions and limitations
under the License.
-->
<!DOCTYPE chapter PUBLIC "-//OASIS//DTD DocBook XML V5.0//EN" "../../docbook-xml/docbook-5.0/dtd/docbook.dtd" >
<chapter id="chapter1">
  <title>Introduction</title>
   
  <!-- What is OpenWebBeans -->	
  <section id="whatisopenwebbeans">
    <title>What is OpenWebBeans?</title>
    <para>
    	OpenWebBeans is an ASL-licensed implementation of the JSR-299: Contexts and Dependency Injection and JSR-330: Dependency Injection for Java. 
    </para>

    <section id="features">
      <title>OpenWebBeans Features</title>
      <warning>Currently OpenWebBeans does not fully implements JSR-299 specification but it is JSR-299 compatible.</warning>
      <para>Currently OpenWebBeans implementation supports the following main features. </para>      
      <itemizedlist spacing="compact">
         <listitem>
         	<para>JSR-330 Support: It supports the JSR-330 based injections.</para>
         </listitem>
         <listitem>
            <para>Managed Beans Support: Supports the configuration and injection of Managed Beans</para>
         </listitem>
         <listitem>
            <para>Session Beans Support in Embeddable OpenEJB in Tomcat 6.x: It supports Session Beans using in embeddable Apache OpenEJB.</para>
         </listitem>
         <listitem>
            <para>Producer Field and Method Support: It supports producer based beans.</para>
         </listitem>
         <listitem>
            <para>Injection of @Resource, @PersistenceUnit and @PersistenceContext: Currently it is able to inject these resource types.</para>
         </listitem>
         <listitem>
            <para>Java Messaging Service (JMS) Injection Support: It supports injection of JMS Connection Factory, JMS Sessions etc.</para>
		</listitem>
        <listitem>
        	<para>Event/Observer Support: It supports Event and Observers.</para>
        </listitem> 
        <listitem>
            <para>Interceptor and Decrotator Support for Managed Beans: It supports interceptors and decorators for managed beans. Currently
            it does not support @InterceptorBinding style interceptors and decorators on Session beans.</para>
        </listitem>
        <listitem>
            <para>Java SE Support: It can be used in Java SE environments like Java Swing applications.</para>
        </listitem>
        <listitem>
            <para>Java EE Web Application Support: It can be used in Java EE Web containers like Tomcat, Jetty etc.</para>
        </listitem>            
      </itemizedlist>
    </section>
    
    <section xml:id="modules">
    	<title>OpenWebBeans Plugin Architecture</title>
    	<para>OpenWebBeans have been developing as a small core package and including other pieces as a plugin. Each of the package and plugin 
    	modules are followings:</para>
    	<itemizedlist spacing="compact">
    		<listitem>
    			<para>
    				JSR-330 API Package: Contains JSR-330 defined API. It will move into the Geronimo specifications in a near time.
    			</para>
    		</listitem>    	
    		<listitem>
    			<para>
    				JSR-299 API Package: Contains JSR-299 defined API. It will move into the Geronimo specifications in a near time.
    			</para>
    		</listitem>
    		<listitem>
    			<para>
    				OpenWebBeans Implementation(Core) Package: Contains core dependency injection related implementation.
    			</para>    			
    		</listitem>
    		<listitem>
    			<para>
    				OpenWebBeans EJB Plugin : Session Beans injection implementation based on the Apache OpenEJB embeddable in Apache Tomcat
    			</para>
    		</listitem>    		
    		<listitem>
    			<para>
    				OpenWebBeans Geronimo Plugin : Geronimo Java EE Server integration codes.
    			</para>
    		</listitem>    		    		
    		<listitem>
    			<para>
    				OpenWebBeans JMS Plugin : Provides Java Messaging Service (JMS) related artifact injections.(Connection factories, Sessions etc.)
    			</para>
    		</listitem>
    		<listitem>
    			<para>
    				OpenWebBeans Resource Plugin : Provides Java EE resource injections. Currently, it supports only for @PersistenceUnit, @PersistenceContext and @Resource annotations.
    				To use @Resource based annotations without OpenEJB, you have to define it explicitly in web.xml via &lt;resource-ref&gt; element.
    			</para>
    			<programlisting>
    			Example:
    				public class Injector{
    					@Produces @Resource(name="myResource") myResource;
    				}    					

   					&lt;resource-ref&gt;
   						&lt;resource-name&gt;myResource&lt;/resource-name&gt;
   						.....
   					&lt;/resource-ref&gt;
    					
    			</programlisting>    					
    		</listitem>    		    		    		
    		<listitem>
    			<para>
    				OpenWebBeans JSF Plugin : Using of dependency injection service in Java Server Faces environment.
    			</para>
    		</listitem>    		    		    		
			<listitem>
				<para>
					OpenWebBeans JPA Plugin : It is deprecated now. Use OpenWebBeans Resource plugin instead.
				</para>
			</listitem>    		   
    	</itemizedlist>
    	
    	<section>
    		<title>How to use Plugins?</title>
    		<para>
    			Plugins are discovered by the OpenWebBeans runtime using <code>java.util.ServiceLoader</code> class. Each plugin jar
    			contains META-INF/services folder that contains plugin implementation class. Your sole responsbility to use plugin is to add
    			related <emphasis>Plugin JAR</emphasis> into the application classpath.
    		</para>
    	</section>
    	
    </section>
    
</section>
<!-- End of SECTION What is OpenWebBeans -->

</chapter>